version: '3'

volumes:
  prometheus_data: {}
  grafana_data: {}
services:
  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_INSTALL_PLUGINS=michaeldmoore-multistat-panel,grafana-piechart-panel,yesoreyeram-boomtable-panel
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
  grafana:
    container_name: grafana
    hostname: grafana
    image: grafana/grafana
    volumes:
      - ./grafana_datasources.yml:/etc/grafana/provisioning/datasources/all.yaml
      - ./grafana_config.ini:/etc/grafana/config.ini
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
  # k6:
  #   image: loadimpact/k6:latest
  #   container_name: k6
  #   ports:
  #     - '6565:6565'
  #   environment:
  #     - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
  #     - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
  #     - K6_OUT=xk6-prometheus-rw
  #   depends_on:
  #     - prometheus
  #   volumes:
  #     - ./samples:/scripts
  # node-exporter:
  #   image: prom/node-exporter:latest
  #   container_name: node-exporter
  #   restart: unless-stopped
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.rootfs=/rootfs'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  #   expose:
  #     - 9100

  # redis:
  #   image: library/redis:6.2-alpine
  #   container_name: redis-${APP_NAME}
  #   ports:
  #     - ${REDIS_PORT}:6379
  # postgres:
  #   image: library/postgres:12.5-alpine
  #   container_name: postgres-${APP_NAME}
  #   ports:
  #     - ${DB_PORT}:5432
  #   environment:
  #     POSTGRES_DB: ${DB_DATABASE}
  #     POSTGRES_USER: ${DB_USERNAME}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  # minio:
  #   image: 'bitnami/minio:latest'
  #   ports:
  #     - 9000:9000
  #     - 9001:9001
  #   environment:
  #     MINIO_ROOT_USER: ${S3_ACCESS_KEY_ID}
  #     MINIO_ROOT_PASSWORD: ${S3_SECRET_ACCESS_KEY}
  #   container_name: minio
